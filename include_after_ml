
open Num;;

let pp_print_num fmt n =
  Format.pp_open_hbox fmt ();
  Format.pp_print_string fmt (string_of_num n);
  Format.pp_close_box fmt ();;

let print_num = pp_print_num Format.std_formatter;;

#install_printer pp_print_num;;


(* ------------------------------------------------------------------------- *)
(* Install a trivial printer for the general polymorphic case.               *)
(* ------------------------------------------------------------------------- *)

let pp_print_fpf fmt (f:('a,'b)Lib.func) = Format.pp_print_string fmt "<func>";;

let print_fpf = pp_print_fpf Format.std_formatter;;

#install_printer pp_print_fpf;;

#install_printer pp_print_qtype;;
#install_printer pp_print_qterm;;
#install_printer pp_print_thm;;


#install_printer pp_print_goal;;
#install_printer pp_print_goalstack;;

(*
;;; Local Variables: ***
;;; mode:tuareg ***
;;; End: ***

*)
